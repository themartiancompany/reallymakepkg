#!/usr/bin/env bash
#
# SPDX-License-Identifier: AGPL-3.0

# System-independent makepkg
_reallymakepkg() {
  local \
    _args=()
  _args=(
    "$@")
  [[ -n "${TERMUX_VERSION}" ]] && \
    _termux_makepkg \
      "${_args[@]}" && \
    return
  makepkg \
    "${_args[@]}"
}

# Set C flags for the termux environment
_termux_flags() {
  if [[ ! " ${LDFLAGS} " =~ \
        '-landroid-shmem -landroid-execinfo' ]] then
    export \
	LDFLAGS="${LDFLAGS} -landroid-shmem -landroid-execinfo"
  fi 
}

# Roughly determine if a package contains a Python package
_is_python_pkg() {
  local \
    _pkgname=() \
    _pkgname=() \
    _flag
  _pkgname=(
    $(source \
        "${_tmpdir}/PKGBUILD" && \
      echo \
        "${pkgname[@]}"))
  for _pkg \
    in "${_pkgname[@]}"; do
    if [[ "${_pkg}" == "python"*"-"* ]]; then
      _flag=true
      break
    fi
  done
  _provides=(
    $(source \
        "${_tmpdir}/PKGBUILD" && \
      echo \
        "${provides[@]}"))
  for _pkg \
    in "${_provides[@]}"; do
    if [[ "${_pkg}" == "python"*"-"* ]]; then
      _flag=true
      break
    fi
  done
  echo \
    "${_flag}" 
}

is_setuptools() {
  local \
    _flag
  _flag="$( \
    cat \
      "${_tmpdir}/PKGBUILD" | \
      grep \
        -o \
        'setup.py')"
  echo \
    "${_flag}"
}

is_build_pkg() {
  local \
    _makedepends=() \
    _pkg \
    _flag
  _makedepends=(
    $(source \
        "${_tmpdir}/PKGBUILD" && \
      echo \
        "${makedepends[@]}"))
  for _pkg \
    in "${_makedepends[@]}"; do
    if [[ "${_pkg}" == "python-build" ]]; then
      _flag=true
      break
    fi
  done
  echo \
    "${_flag}"
}

_python_quirks() {
  local \
    _build_pattern \
    _setuptools_pattern
  if [[ "$(_is_python_pkg)" == "true" ]]; then
    if [[ "$(_is_setuptools)" != "" ]]; then
      _setuptools_pattern="$( \
        cat \
          "${_tmpdir}/PKGBUILD" | \
          grep \
            -o \
            'root=[^ ]*terdir[^ ]*')"
      [[ "${_setuptools_pattern}" != "" ]] && \
        sed \
          -i \
          "s/${_setuptools_pattern}/root=\"\${pkgdir}\"/g" \
          "${_tmpdir}/PKGBUILD"
    fi
    if [[ "$(_is_build_pkg)" == "true" ]]; then
      _build_pattern="$( \
        cat \
          "${_tmpdir}/PKGBUILD" | \
          grep \
            -o \
            'destdir=[^ ]*terdir[^ ]*')"
      [[ "${_build_pattern}" != "" ]] && \
        sed \
          -i \
          "s/${_setuptools_pattern}/destdir=\"\/\"/g" \
          "${_tmpdir}/PKGBUILD"
    fi
  fi
}

# Termux makepkg
# $@:makepkg args
_termux_makepkg() {
  local \
    _args=() \
    _pypattern
  _args=(
    "$@")
  _tmpdir="$( \
    mktemp \
      -d)"
  cp \
    -a \
    "$(pwd)"/* \
    "${_tmpdir}"
  sed \
    "s/pkgdir/terdir/g" \
    "$(pwd)/PKGBUILD" > \
    "${_tmpdir}/PKGBUILD"
  _python_quirks
  cd \
    "${_tmpdir}"
  _termux_flags
  makepkg \
    "${_args[@]}"
  [[ $? -eq 0 ]] && \
  [[ *".pkg."* != "" ]] && \
    mv \
      *".pkg."* \
      "${OLDPWD}" && \
    rm \
      -rf "${_tmpdir}"
  cd \
    "${OLDPWD}"
}

_args=(
  "$@")

_reallymakepkg \
  "${_args[@]}"
